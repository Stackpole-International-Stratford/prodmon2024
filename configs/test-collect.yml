
devices:
  - name: test-pylogix
    frequency: 1
    driver: pylogix
    ip: '10.4.43.103'
    # route: 
    #   - !!python/tuple [1,3]
    slot: 0           # optional
    data_dir: "./data/mysql1/"

    tags:
      - name: 'test-pylogix-ping'
        type: ping
        
        tag: 'Program:MainProgram.ProdCount.ACC'
        frequency: 300 # optional

      - name: 'test-py-count-1'  # name for data point
        type: counter
        data_dir: "./data/mysql2/"

        tag: 'Program:MainProgram.ProdCount.ACC'  # PLC tag name
        frequency: 5        # optional, defaults to device freq

        machine: 1530p1       # machine number for database entry
        scale: 1            # number of parts made per cycle

        # to get the part type specify one of the following:
        part: "50-9341"   # a hard coded value

        # a tag with the part number in a string
        # part_number_tag: 'Program:MainProgram.ProdCountpartText' 

        # a tag with a reference into part_dict and part_dict
        # part_number_tag: 'Program:MainProgram.ProdCountpartDINT'
        # part_dict:
        #   0: '50-0455'
        #   1: '50-9341'

      - name: 'Test Reject'  # name for data point
        type: reject
        reason: 'Test Reject'
        tag: 'Program:MainProgram.ProdCount.ACC'
        machine: 1533       # machine number for database entry
        scale: 1            # number of parts made per cycle
        part: "test"        # a hard coded value

      - name: 'test-py-count-3'  # test direct read part number
        type: counter
        
        tag: 'Program:MainProgram.ProdCount.ACC'  # PLC tag name
        frequency: 5        # optional, defaults to device freq

        machine: 1530p3       # machine number for database entry
        scale: 1            # number of parts made per cycle

        # to get the part type specify one of the following:
        # part: "50-9341"   # a hard coded value

        # a tag with the part number in a string
        # part_number_tag: 'Program:MainProgram.ProdCountpartText' 

        # a tag with a reference into part_dict and part_dict
        part_number_tag: 'Program:MainProgram.ProdCountpartDINT'
        part_dict:
          0: '50-0455'
          1: '50-9341'


  - name: test-modbus
    frequency: 1
    driver: modbus
    ip: '10.4.45.53'
    port: 502
    unit_id: 0              
    data_dir: "./data/mysql2/"

    tags:
      - name: 'test-modbus-ping'
        type: ping
        frequency: 300 # optional
        register:
          type: H  # Register type, H = Holding Reg, D = discrete input contact
          address: 0

      - name: 'test-modbus-count1'  # name for data point
        type: ADAM_counter
        machine: 1530m1       # machine number for database entry
        frequency: 5        # optional, defaults to device freq
        scale: 1            # number of parts made per cycle
        
        register:     # the counter register
          type: H     # Register type, H = Holding Reg, D = discrete input contact
          address: 0  # 
          length: 2   # number of registers to read

        # # to get the part type specify one of the following:
        # part: "50-9341"   # a hard coded value

        # a tag with the part number in a string
        # part_type_register:
        #    type: D  # Register type, H = Holding Reg, D = discrete input contact
        #    address: 0
        #    length: 1

        # a register with a reference into part_dict and part_dict
        part_type_register:
           type: D  # Register type, H = Holding Reg, D = discrete input contact
           address: 0
           length: 1
        part_dict:
          0: '50-0455'
          1: '50-9341'

        # using a name tag doesnt work wor the modbus units I have, no strings
      # - name: 'test-modbus-count-2'  # name for data point
      #   type: ADAM_counter
      #   data_dir: "./data/mqtt2/"
      #   machine: 1530m2       # machine number for database entry
      #   frequency: 5        # optional, defaults to device freq
      #   scale: 1            # number of parts made per cycle
        
      #   register:     # the counter register
      #     type: H     # Register type, H = Holding Reg, D = discrete input contact
      #     address: 0  # 
      #     length: 2   # number of registers to read

      #   # to get the part type specify one of the following:
      #   # part: "50-9341"   # a hard coded value

      #   # a tag with the part number in a string
      #   part_type_register:
      #      type: D  # Register type, H = Holding Reg, D = discrete input contact
      #      address: 0
      #      length: 1

      #   # a register with a reference into part_dict and part_dict
      #   # part_type_register:
      #   #    type: D  # Register type, H = Holding Reg, D = discrete input contact
      #   #    address: 0
      #   #    length: 1
      #   # part_dict:
      #   #   0: '50-0455'
      #   #   1: '50-9341'

      # - name: 'test-modbus-count-2'  # name for data point
      #   type: ADAM_counter
      #   machine: 1530m3       # machine number for database entry
      #   frequency: 5        # optional, defaults to device freq
      #   scale: 1            # number of parts made per cycle

      #   data_dir: "./data/mqtt1/"
      #   register:     # the counter register
      #     type: H     # Register type, H = Holding Reg, D = discrete input contact
      #     address: 0  # 
      #     length: 2   # number of registers to read

      #   # to get the part type specify one of the following:
      #   # part: "50-9341"   # a hard coded value

      #   # a tag with the part number in a string
      #   # part_type_register:
      #   #    type: D  # Register type, H = Holding Reg, D = discrete input contact
      #   #    address: 0
      #   #    length: 1

      #   # a register with a reference into part_dict and part_dict
      #   part_type_register:
      #     type: D  # Register type, H = Holding Reg, D = discrete input contact
      #     address: 0
      #     length: 1
      #   part_dict:
      #     0: '50-0455'
      #     1: '50-9341'

